// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: xr9maaNfLrdiXDsDctNCkm
// Component: FcOIj0_zcs
import * as React from "react";
import {
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts
} from "@plasmicapp/react-web";
import "@plasmicapp/react-web/lib/plasmic.css";
import projectcss from "./plasmic_blank_project.module.css"; // plasmic-import: xr9maaNfLrdiXDsDctNCkm/projectcss
import sty from "./PlasmicTest.module.css"; // plasmic-import: FcOIj0_zcs/css
import Ellipse2Icon from "./icons/PlasmicIcon__Ellipse2"; // plasmic-import: fKiC_O4_T0/icon
import Layer1Icon from "./icons/PlasmicIcon__Layer1"; // plasmic-import: EibyUGCrA9/icon
import Layer2Icon from "./icons/PlasmicIcon__Layer2"; // plasmic-import: SkmPl_fIvXR/icon
import Layer3Icon from "./icons/PlasmicIcon__Layer3"; // plasmic-import: rJKjLTUQ4HE/icon

export const PlasmicTest__VariantProps = new Array();

export const PlasmicTest__ArgProps = new Array();

function PlasmicTest__RenderFunc(props) {
  const { variants, args, overrides, forNode } = props;
  return (
    <React.Fragment>
      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_tokens,
            sty.root
          )}
        >
          <div
            data-plasmic-name={"blogStoriesDesktop"}
            data-plasmic-override={overrides.blogStoriesDesktop}
            className={classNames(projectcss.all, sty.blogStoriesDesktop)}
          >
            <div
              data-plasmic-name={"darkBlogStoriesDesktop1"}
              data-plasmic-override={overrides.darkBlogStoriesDesktop1}
              className={classNames(
                projectcss.all,
                sty.darkBlogStoriesDesktop1
              )}
            />

            <div
              data-plasmic-name={"rectangle74"}
              data-plasmic-override={overrides.rectangle74}
              className={classNames(projectcss.all, sty.rectangle74)}
            />

            <div
              data-plasmic-name={
                "manWearingCapAndCrewNeckShirtStandingInTheMiddle21088451"
              }
              data-plasmic-override={
                overrides.manWearingCapAndCrewNeckShirtStandingInTheMiddle21088451
              }
              className={classNames(
                projectcss.all,
                sty.manWearingCapAndCrewNeckShirtStandingInTheMiddle21088451
              )}
            />

            <div
              data-plasmic-name={
                "manWearingCapAndCrewNeckShirtStandingInTheMiddle21088452"
              }
              data-plasmic-override={
                overrides.manWearingCapAndCrewNeckShirtStandingInTheMiddle21088452
              }
              className={classNames(
                projectcss.all,
                sty.manWearingCapAndCrewNeckShirtStandingInTheMiddle21088452
              )}
            />

            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text___0MeXt
              )}
            >
              {"All About Camping"}
            </div>

            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__y0K5Y
              )}
            >
              {
                "Camping is an outdoor activity involving overnight stays away from home in a shelter, such as a tent \nor a recreational vehicle."
              }
            </div>

            <div
              data-plasmic-name={"_10RoundSmallNormal"}
              data-plasmic-override={overrides._10RoundSmallNormal}
              className={classNames(projectcss.all, sty._10RoundSmallNormal)}
            >
              <Ellipse2Icon
                className={classNames(projectcss.all, sty.svg__usBom)}
                role={"img"}
              />

              <div
                data-plasmic-name={"iconsarrowBack"}
                data-plasmic-override={overrides.iconsarrowBack}
                className={classNames(projectcss.all, sty.iconsarrowBack)}
              >
                <div
                  data-plasmic-name={"layer2"}
                  data-plasmic-override={overrides.layer2}
                  className={classNames(projectcss.all, sty.layer2)}
                >
                  <Layer1Icon
                    className={classNames(projectcss.all, sty.svg__z1EIc)}
                    role={"img"}
                  />
                </div>
              </div>
            </div>

            <div
              data-plasmic-name={"_10RoundSmallNormal2"}
              data-plasmic-override={overrides._10RoundSmallNormal2}
              className={classNames(projectcss.all, sty._10RoundSmallNormal2)}
            >
              <Ellipse2Icon
                className={classNames(projectcss.all, sty.svg__fCa9D)}
                role={"img"}
              />

              <div
                data-plasmic-name={"iconsarrowFront"}
                data-plasmic-override={overrides.iconsarrowFront}
                className={classNames(projectcss.all, sty.iconsarrowFront)}
              >
                <div
                  data-plasmic-name={"layer3"}
                  data-plasmic-override={overrides.layer3}
                  className={classNames(projectcss.all, sty.layer3)}
                >
                  <Layer2Icon
                    className={classNames(projectcss.all, sty.svg__kKpLd)}
                    role={"img"}
                  />
                </div>
              </div>
            </div>

            <div
              data-plasmic-name={"_07PagingStories"}
              data-plasmic-override={overrides._07PagingStories}
              className={classNames(projectcss.all, sty._07PagingStories)}
            >
              <div
                data-plasmic-name={"rectangle36"}
                data-plasmic-override={overrides.rectangle36}
                className={classNames(projectcss.all, sty.rectangle36)}
              />

              <div
                data-plasmic-name={"rectangle37"}
                data-plasmic-override={overrides.rectangle37}
                className={classNames(projectcss.all, sty.rectangle37)}
              />

              <div
                data-plasmic-name={"rectangle38"}
                data-plasmic-override={overrides.rectangle38}
                className={classNames(projectcss.all, sty.rectangle38)}
              />

              <div
                data-plasmic-name={"rectangle39"}
                data-plasmic-override={overrides.rectangle39}
                className={classNames(projectcss.all, sty.rectangle39)}
              />

              <div
                data-plasmic-name={"rectangle40"}
                data-plasmic-override={overrides.rectangle40}
                className={classNames(projectcss.all, sty.rectangle40)}
              />
            </div>

            <div
              data-plasmic-name={"iconsclose"}
              data-plasmic-override={overrides.iconsclose}
              className={classNames(projectcss.all, sty.iconsclose)}
            >
              <div
                data-plasmic-name={"layer4"}
                data-plasmic-override={overrides.layer4}
                className={classNames(projectcss.all, sty.layer4)}
              >
                <Layer3Icon
                  className={classNames(projectcss.all, sty.svg__t1WqL)}
                  role={"img"}
                />
              </div>
            </div>
          </div>
        </div>
      </div>
    </React.Fragment>
  );
}

const PlasmicDescendants = {
  root: [
    "root",
    "blogStoriesDesktop",
    "darkBlogStoriesDesktop1",
    "rectangle74",
    "manWearingCapAndCrewNeckShirtStandingInTheMiddle21088451",
    "manWearingCapAndCrewNeckShirtStandingInTheMiddle21088452",
    "_10RoundSmallNormal",
    "iconsarrowBack",
    "layer2",
    "_10RoundSmallNormal2",
    "iconsarrowFront",
    "layer3",
    "_07PagingStories",
    "rectangle36",
    "rectangle37",
    "rectangle38",
    "rectangle39",
    "rectangle40",
    "iconsclose",
    "layer4"
  ],

  blogStoriesDesktop: [
    "blogStoriesDesktop",
    "darkBlogStoriesDesktop1",
    "rectangle74",
    "manWearingCapAndCrewNeckShirtStandingInTheMiddle21088451",
    "manWearingCapAndCrewNeckShirtStandingInTheMiddle21088452",
    "_10RoundSmallNormal",
    "iconsarrowBack",
    "layer2",
    "_10RoundSmallNormal2",
    "iconsarrowFront",
    "layer3",
    "_07PagingStories",
    "rectangle36",
    "rectangle37",
    "rectangle38",
    "rectangle39",
    "rectangle40",
    "iconsclose",
    "layer4"
  ],

  darkBlogStoriesDesktop1: ["darkBlogStoriesDesktop1"],
  rectangle74: ["rectangle74"],
  manWearingCapAndCrewNeckShirtStandingInTheMiddle21088451: [
    "manWearingCapAndCrewNeckShirtStandingInTheMiddle21088451"
  ],

  manWearingCapAndCrewNeckShirtStandingInTheMiddle21088452: [
    "manWearingCapAndCrewNeckShirtStandingInTheMiddle21088452"
  ],

  _10RoundSmallNormal: ["_10RoundSmallNormal", "iconsarrowBack", "layer2"],
  iconsarrowBack: ["iconsarrowBack", "layer2"],
  layer2: ["layer2"],
  _10RoundSmallNormal2: ["_10RoundSmallNormal2", "iconsarrowFront", "layer3"],
  iconsarrowFront: ["iconsarrowFront", "layer3"],
  layer3: ["layer3"],
  _07PagingStories: [
    "_07PagingStories",
    "rectangle36",
    "rectangle37",
    "rectangle38",
    "rectangle39",
    "rectangle40"
  ],

  rectangle36: ["rectangle36"],
  rectangle37: ["rectangle37"],
  rectangle38: ["rectangle38"],
  rectangle39: ["rectangle39"],
  rectangle40: ["rectangle40"],
  iconsclose: ["iconsclose", "layer4"],
  layer4: ["layer4"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicTest__ArgProps,
      internalVariantPropNames: PlasmicTest__VariantProps
    });

    return PlasmicTest__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicTest";
  } else {
    func.displayName = `PlasmicTest.${nodeName}`;
  }
  return func;
}

export const PlasmicTest = Object.assign(
  // Top-level PlasmicTest renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    blogStoriesDesktop: makeNodeComponent("blogStoriesDesktop"),
    darkBlogStoriesDesktop1: makeNodeComponent("darkBlogStoriesDesktop1"),
    rectangle74: makeNodeComponent("rectangle74"),
    manWearingCapAndCrewNeckShirtStandingInTheMiddle21088451: makeNodeComponent(
      "manWearingCapAndCrewNeckShirtStandingInTheMiddle21088451"
    ),

    manWearingCapAndCrewNeckShirtStandingInTheMiddle21088452: makeNodeComponent(
      "manWearingCapAndCrewNeckShirtStandingInTheMiddle21088452"
    ),

    _10RoundSmallNormal: makeNodeComponent("_10RoundSmallNormal"),
    iconsarrowBack: makeNodeComponent("iconsarrowBack"),
    layer2: makeNodeComponent("layer2"),
    _10RoundSmallNormal2: makeNodeComponent("_10RoundSmallNormal2"),
    iconsarrowFront: makeNodeComponent("iconsarrowFront"),
    layer3: makeNodeComponent("layer3"),
    _07PagingStories: makeNodeComponent("_07PagingStories"),
    rectangle36: makeNodeComponent("rectangle36"),
    rectangle37: makeNodeComponent("rectangle37"),
    rectangle38: makeNodeComponent("rectangle38"),
    rectangle39: makeNodeComponent("rectangle39"),
    rectangle40: makeNodeComponent("rectangle40"),
    iconsclose: makeNodeComponent("iconsclose"),
    layer4: makeNodeComponent("layer4"),
    // Metadata about props expected for PlasmicTest
    internalVariantProps: PlasmicTest__VariantProps,
    internalArgProps: PlasmicTest__ArgProps
  }
);

export default PlasmicTest;
/* prettier-ignore-end */
